package ${package.ServiceImpl};

import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import org.springframework.stereotype.Service;

/**
 * <p>
 * $!{table.comment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Service
#if(${kotlin})
open class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}>(), ${table.serviceName} {

}
#else
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName} {
        @Resource
    ${table.mapperName} ${table.entityPath}Mapper;

        @Override
        public IPage<${entity}> getPage(int currentPage, int PageSize, ${entity}  ${table.entityPath}) {
        /*
        模糊搜索
         */
        LambdaQueryWrapper<${entity}> lqw = new LambdaQueryWrapper<>();
##        lqw.like(null != ${table.entityPath}.getStudentId(), Student::getStudentId, ${table.entityPath}.getStudentId());
##        lqw.like(Strings.isNotEmpty(${table.entityPath}.getStudentName()), Student::getStudentName, ${table.entityPath}.getStudentName());
##        lqw.like(Strings.isNotEmpty(${table.entityPath}.getMajor()), Student::getMajor, ${table.entityPath}.getMajor());
        IPage<${entity}> page = new Page<>(currentPage, PageSize);
        ${table.entityPath}Mapper.selectPage(page, lqw);
        return page;
        }
}
#end
